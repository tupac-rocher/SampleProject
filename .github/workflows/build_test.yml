name: Java CI

on: [pull_request]

jobs:

  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package -Dcheckstyle.skip

  # Upload Designite artifact job
  upload-designite-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Clone tushartushar/DesigniteJava
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
          owner: 'tushartushar'
          repository: 'DesigniteJava'
      - name: Create DesigniteJava .jar
        run: |
          cd DesigniteJava
          mvn package -Dmaven.test.skip
      - name: Upload DesigniteJava .jar
        uses: actions/upload-artifact@v3
        with:
          name: designite-java
          path: DesigniteJava/target/DesigniteJava.jar

  # Report job
  report:
    runs-on: ubuntu-latest
    needs: upload-designite-artifact
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Test with Maven
        run: mvn -B test -Dcheckstyle.skip
      # Test Coverage
      - name: Run Coverage
        run: |
            mvn jacoco:report
      - name: Run check style to show in action
        uses: nikitasavinov/checkstyle-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: 'github-pr-check'
          tool_name: 'testtool'
      # Checkstyle
      - name: Run Checkstyle
        run: mvn checkstyle:checkstyle
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: designite-java
      # DesigniteJava
      - name: Run Designite
        run:  java -jar DesigniteJava.jar -i ./src/main -o ./target/designite
      # CK Plugin
      - name: Run CK plugin
        run: |
          cd ..
          git clone https://github.com/jazzmuesli/ck-mvn-plugin.git
          cd ck-mvn-plugin
          mvn clean install -Dck.version=0.7.0
          cd ${{ github.workspace }}
          mvn com.github.jazzmuesli:ck-mvn-plugin:metrics -Dck.version=0.7.0
      # Metrics
      - name: Download release
        uses: robinraju/release-downloader@v1.4
        with:
          # The source repository path.
          repository: "rodhilton/jasome"
          tag: "v0.6.8-alpha"

          # The name of the file to download.
          fileName: "jasome-0.6.8-alpha.zip"
      - name: Unzip release
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq jasome-0.6.8-alpha.zip -d jasome-0.6.8-alpha
      - name: Generate metrics file
        run: |
          cd jasome-0.6.8-alpha/jasome-0.6.8-alpha
          bin/jasome ../../src > ../../metrics.xml
      # Aggregate Information
      - name: Get report info
        id: reportsInfo
        uses: tupac-rocher/mvn-format-xml-reports@v2
        with:
          jacoco-html-report: ${{ github.workspace }}/target/site/jacoco/index.html
          checkstyle-result-xml: ${{ github.workspace }}/target/checkstyle-result.xml
          designite-design-result-csv: ${{ github.workspace }}/target/designite/designCodeSmells.csv
          designite-implementation-result-csv: ${{ github.workspace }}/target/designite/implementationCodeSmells.csv
          ck-main-class-csv: ${{ github.workspace }}/src/main/java/class.csv
          metrics-xml: ${{ github.workspace }}/metrics.xml
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            # Report
            ## Test Coverage
            | Total coverage | ${{ steps.reportsInfo.outputs.test-coverage-comment }} |
            |:-|:-:|
            ## CK metrics
            ${{ steps.reportsInfo.outputs.metrics-comment }}
            ## Code quality
            ${{ steps.reportsInfo.outputs.checkstyle-comment }}
            ## Code smells
            ${{ steps.reportsInfo.outputs.code-smells-comment }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


